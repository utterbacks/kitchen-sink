@import url("https://fonts.googleapis.com/css?family=Work+Sans:400|Space+Mono:400");
/* css variables!
use :root to define. That makes them accessible globally. However,
you can define them locally too. For instance, in body below, we
change the actual color of --black to blue. */
:root {
  /* Define colors as colors *BEFORE* you define intentions.*/
  --green: #00ebc7;
  --red: #ff5470;
  --yellow: #fde24f;
  --black: #1b2d45;
  --darkBlue: #00214d;
  --grey: #bfbfbf;
  --lightGrey: #f2f4f6;

  /* NOW define colors intentions */
  --primary: var(--green);
  --danger: var(--red);
  --background: var(--lightGrey);
  --textColor: var(--black);
  --lineColor: var(--grey);

  /* Styles */
  --line: solid 1px var(--lineColor);

  /* Type */

  --headingFont: "Space Mono", monospace;
  --bodyFont: "Work Sans", sans-serif;
  --baseFontSize: 100%;
  --h1: 3.052rem;
  --h2: 2.441rem;
  --h3: 1.953rem;
  --h4: 1.563rem;
  --h5: 1.25rem;
  --smallText: 0.8rem;

  /* Elevation */
  --level-1: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --level-2: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --level-3: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --level-4: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
    0 10px 10px -5px rgba(0, 0, 0, 0.04);

  --med: 400px;
}

/* BEGIN typescale */

html {
  font-size: var(--baseFontSize);
} /*18px*/

body {
  font-family: var(--bodyFont);
  font-weight: 400;
  line-height: 1.75;
  padding-bottom: 300px;
  background: var(--background);
  color: var(--textColor);
}

p {
  margin-bottom: 1rem;
  max-width: 40em;
}

p a,
blockquote a {
  color: var(--black);
  text-decoration: none;
  border-bottom: solid 2px var(--green);
}

h1,
h2,
h3,
h4,
h5 {
  margin: 3rem 0 1.38rem;
  font-family: var(--headingFont);
  line-height: 1.3;
}

h1 {
  margin-top: 0;
  font-size: var(--h1);
}

h2 {
  font-size: var(--h2);
}

h3 {
  font-size: var(--h3);
}

h4 {
  font-size: var(--h4);
}

h5 {
  font-size: var(--h5);
}

small,
.text_small {
  font-size: var(--smallText);
}

/* END typescale */

/* body {
  /* --black: blue; }*/

.dark {
  --background: var(--black);
  --textColor: var(--lightGrey);
}

blockquote {
  margin: 10;
  padding: 2rem;
  background: white;
  box-shadow: var(--level-3);
}

label {
  display: block;
  font-size: var(--smallText);
}

input,
textarea {
  padding: 4px 5px;
  border: var(--line);
  border-radius: 2px;
}

textarea {
  width: 100%;
}

::placeholder {
  color: var(--grey);
}

select {
  border: var(--line);
}

hr {
  border-top: var(--line);
}

button {
  /* design tokens */
  --buttonColor: var(--primary);

  appearance: none;
  color: var(--textColor);
  background-color: var(--buttonColor);
  border: none;
  border-radius: 10px;
  padding: 5px 25px;
  box-shadow: var(--level-1);
  transition: 0.3s ease-in-out box-shadow;
}

button:hover {
  box-shadow: var(--level-2);
}

/* this is styling based on an attribute! */
button[disabled] {
  opacity: 0.4;
}

/* .cancel is a little too broad. can mean anything. */
button.cancel {
  --buttonColor: var(--danger);
  --textColor: white;
}

/* this is specific to buttons with class of small. */
button.small {
  font-size: var(--smallText);
}

.layout {
  margin: 0 auto;
  width: 95%;
}

.grid {
  --gridCols: 2;
  display: block;
  grid-template-columns: repeat(var(--gridCols), 1fr);
}

.cols-3 {
  --gridCols: 3;
}

.flex {
  --justifyContent: space-between;
  display: block;
  justify-content: var(--justifyContent);
}

.flex-around {
  --justifyContent: space-around;
}

@media only screen and (min-width: 600px) {
  :root {
    --baseFontSize: 112.5%;
  }
  .grid {
    display: grid;
  }
  .flex {
    display: flex;
  }
}

/* @media only screen and (max-width: 800px) {
  :root {
    --black: red;
  }
} */

/* SPECIFICITY
===================================================================== */
/* Selectors, least to most. */
/* 1. elements
h1, div, p, etc.
*/

/* 2. Class, attribute [type='input'] */

/* 3. IDs! DON'T DO THIS! */

/* 4. !important - don't ever use!! Don't DO IT! NO. nnNnNNNoOoOoOoOoOoOOOooooooOO!!!!!!! */

/* More specific based on load-order */

/* this\/ */
/* h1 {
  font-size: 1rem;
} */
/* is overridden by this\/ */
/* h1 {
  font-size: 2rem;
} */

/* but this\/ */
/* .header {
  font-size: 9px;
} */
/* still overrides this\/ */
/* h1 {
  font-size: 2rem;
} */

/* this is 3 levels of specifity */
/* .wrapper .container .header {
  font-size: 2rem;
} */
/* this is 1 level of specifity deep. */
/* .header {
  font-size: 1rem;
} */
